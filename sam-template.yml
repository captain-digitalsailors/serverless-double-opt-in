AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: 'SAM template for email double opt-in prototype'
Resources:
  ResourcesBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: double-opt-in.patternbox.com
  TicketTable:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      TableName: Email-DoubleOptIn
      AttributeDefinitions:
        - AttributeName: userId
          AttributeType: S
      KeySchema:
        - AttributeName: userId
          KeyType: HASH
      TimeToLiveSpecification:
        AttributeName: expirationTimeTTL
        Enabled: true
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
  DoubleOptInInitiate:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: src/handler.initiate
      Runtime: nodejs8.10
      CodeUri: >-
        /Users/dehms/Projects/sandbox-sls/sls-double-opt-in/.serverless/double-opt-in.zip
      MemorySize: 512
      Timeout: 10
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - 'ses:SendTemplatedEmail'
              Resource: '*'
            - Effect: Allow
              Action:
                - 's3:ListBucket'
              Resource:
                - 'arn:aws:s3:::double-opt-in.patternbox.com'
            - Effect: Allow
              Action:
                - 's3:GetObject'
                - 's3:PutObject'
                - 's3:HeadObject'
                - 's3:DeleteObject'
              Resource:
                - 'arn:aws:s3:::double-opt-in.patternbox.com/*'
            - Effect: Allow
              Action:
                - 'ssm:GetParameter'
                - 'ssm:GetParameters'
              Resource:
                - '*'
            - Effect: Allow
              Action:
                - 'dynamodb:DescribeTable'
                - 'dynamodb:Query'
                - 'dynamodb:Scan'
                - 'dynamodb:GetItem'
                - 'dynamodb:PutItem'
                - 'dynamodb:UpdateItem'
                - 'dynamodb:DeleteItem'
              Resource:
                - 'arn:aws:dynamodb:eu-central-1:*:table/Email-DoubleOptIn'
      Environment:
        Variables:
          s3bucket: double-opt-in.patternbox.com
          basePath: doi.patternbox.com
          emailSource: no-reply@patternbox.com
          ssmSecret: double-opt-in-secret
      Events:
        Event1:
          Type: Api
          Properties:
            Path: /initiateDoubleOptIn
            Method: post
            RestApiId:
              Ref: DoubleOptIn
  DoubleOptIn:
    Type: 'AWS::Serverless::Api'
    Properties:
      StageName: dev
      DefinitionBody:
        swagger: '2.0'
        info:
          title:
            Ref: 'AWS::StackName'
        paths:
          /initiateDoubleOptIn:
            post:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri:
                  'Fn::Sub': >-
                    arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DoubleOptInInitiate.Arn}/invocations
              responses: {}
          '/confirmDoubleOptIn/{userId}/{confirmToken}':
            get:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri:
                  'Fn::Sub': >-
                    arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DoubleOptInConfirm.Arn}/invocations
              responses: {}
          '/revokeDoubleOptIn/{userId}/{revokeToken}':
            get:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri:
                  'Fn::Sub': >-
                    arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DoubleOptInRevoke.Arn}/invocations
              responses: {}
  DoubleOptInInitiateLambdaPermission:
    Type: 'AWS::Lambda::Permission'
    DependsOn:
      - DoubleOptInInitiate
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName:
        Ref: DoubleOptInInitiate
      Principal: apigateway.amazonaws.com
  DoubleOptInConfirm:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: src/handler.confirm
      Runtime: nodejs8.10
      CodeUri: >-
        /Users/dehms/Projects/sandbox-sls/sls-double-opt-in/.serverless/double-opt-in.zip
      MemorySize: 512
      Timeout: 10
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - 'ses:SendTemplatedEmail'
              Resource: '*'
            - Effect: Allow
              Action:
                - 's3:ListBucket'
              Resource:
                - 'arn:aws:s3:::double-opt-in.patternbox.com'
            - Effect: Allow
              Action:
                - 's3:GetObject'
                - 's3:PutObject'
                - 's3:HeadObject'
                - 's3:DeleteObject'
              Resource:
                - 'arn:aws:s3:::double-opt-in.patternbox.com/*'
            - Effect: Allow
              Action:
                - 'ssm:GetParameter'
                - 'ssm:GetParameters'
              Resource:
                - '*'
            - Effect: Allow
              Action:
                - 'dynamodb:DescribeTable'
                - 'dynamodb:Query'
                - 'dynamodb:Scan'
                - 'dynamodb:GetItem'
                - 'dynamodb:PutItem'
                - 'dynamodb:UpdateItem'
                - 'dynamodb:DeleteItem'
              Resource:
                - 'arn:aws:dynamodb:eu-central-1:*:table/Email-DoubleOptIn'
      Environment:
        Variables:
          s3bucket: double-opt-in.patternbox.com
          basePath: doi.patternbox.com
          emailSource: no-reply@patternbox.com
          ssmSecret: double-opt-in-secret
      Events:
        Event1:
          Type: Api
          Properties:
            Path: '/confirmDoubleOptIn/{userId}/{confirmToken}'
            Method: get
            RestApiId:
              Ref: DoubleOptIn
  DoubleOptInConfirmLambdaPermission:
    Type: 'AWS::Lambda::Permission'
    DependsOn:
      - DoubleOptInConfirm
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName:
        Ref: DoubleOptInConfirm
      Principal: apigateway.amazonaws.com
  DoubleOptInRevoke:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: src/handler.revoke
      Runtime: nodejs8.10
      CodeUri: >-
        /Users/dehms/Projects/sandbox-sls/sls-double-opt-in/.serverless/double-opt-in.zip
      MemorySize: 512
      Timeout: 10
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - 'ses:SendTemplatedEmail'
              Resource: '*'
            - Effect: Allow
              Action:
                - 's3:ListBucket'
              Resource:
                - 'arn:aws:s3:::double-opt-in.patternbox.com'
            - Effect: Allow
              Action:
                - 's3:GetObject'
                - 's3:PutObject'
                - 's3:HeadObject'
                - 's3:DeleteObject'
              Resource:
                - 'arn:aws:s3:::double-opt-in.patternbox.com/*'
            - Effect: Allow
              Action:
                - 'ssm:GetParameter'
                - 'ssm:GetParameters'
              Resource:
                - '*'
            - Effect: Allow
              Action:
                - 'dynamodb:DescribeTable'
                - 'dynamodb:Query'
                - 'dynamodb:Scan'
                - 'dynamodb:GetItem'
                - 'dynamodb:PutItem'
                - 'dynamodb:UpdateItem'
                - 'dynamodb:DeleteItem'
              Resource:
                - 'arn:aws:dynamodb:eu-central-1:*:table/Email-DoubleOptIn'
      Environment:
        Variables:
          s3bucket: double-opt-in.patternbox.com
          basePath: doi.patternbox.com
          emailSource: no-reply@patternbox.com
          ssmSecret: double-opt-in-secret
      Events:
        Event1:
          Type: Api
          Properties:
            Path: '/revokeDoubleOptIn/{userId}/{revokeToken}'
            Method: get
            RestApiId:
              Ref: DoubleOptIn
  DoubleOptInRevokeLambdaPermission:
    Type: 'AWS::Lambda::Permission'
    DependsOn:
      - DoubleOptInRevoke
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName:
        Ref: DoubleOptInRevoke
      Principal: apigateway.amazonaws.com
